# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-09-20 19:47
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import time


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Коментар')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата коментування')),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(max_length=350)),
                ('main_img', models.ImageField(blank=True, null=True, upload_to='playlist', verbose_name='Лого плейлиста')),
                ('views', models.IntegerField(default=0)),
                ('like', models.IntegerField(default=0)),
                ('comments', models.IntegerField(default=0)),
                ('color', models.CharField(default='#29424a', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('short_desc', models.TextField(blank=True, max_length=200, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('post_img', models.ImageField(blank=True, null=True, upload_to='post', verbose_name='Головне зображення')),
                ('views', models.IntegerField(default=0)),
                ('like', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ('-created_date',),
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.CharField(max_length=1, verbose_name='1-активний, 0-неактивний')),
                ('slide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Post')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('numb', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=70, null=True)),
                ('like', models.IntegerField(default=50)),
                ('avatar', models.ImageField(blank=True, default='default9.png', null=True, upload_to='user_avatar', verbose_name='Зображення профілю')),
                ('about_me', models.TextField(blank=True, max_length=120, null=True)),
                ('pGitHub', models.CharField(blank=True, max_length=100, null=True, verbose_name='GitHub')),
                ('pGitLab', models.CharField(blank=True, max_length=100, null=True, verbose_name='GitLab')),
                ('pLinkedIn', models.CharField(blank=True, max_length=100, null=True, verbose_name='LinkedIn')),
                ('pReplace', models.CharField(blank=True, max_length=100, null=True, verbose_name='Replace.org.ua')),
                ('pCodeguida', models.CharField(blank=True, max_length=100, null=True, verbose_name='Codeguida')),
                ('pFacebook', models.CharField(blank=True, max_length=100, null=True, verbose_name='Facebook')),
                ('pTwitter', models.CharField(blank=True, max_length=100, null=True, verbose_name='Twitter')),
                ('last_activity', models.IntegerField(default=time.time, verbose_name='Остання активність')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.UserProfile'),
        ),
        migrations.AddField(
            model_name='post',
            name='liking',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='playlist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Playlist'),
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(to='blog.Tag'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.UserProfile'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='contributors',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.UserProfile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Post'),
        ),
    ]
